plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.1-SNAPSHOT" apply false
    id("com.diffplug.spotless") version "6.12.1" apply false
    id("com.matthewprenger.cursegradle") version "1.4.0" apply false
    id("com.modrinth.minotaur") version "2.5.0" apply false
    id("com.github.johnrengelman.shadow") version "7.1.2" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply(plugin: "dev.architectury.loom")
    apply(plugin: "com.diffplug.spotless")

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft("com.mojang:minecraft:${rootProject.minecraft_version}")
        mappings(loom.officialMojangMappings())
    }

    base {
        archivesName.set("$rootProject.name-$name")
    }

    /////////////
    // Spotless
    spotless {
        java {
            target("src/main/java/**/*.java")

            endWithNewline()
            indentWithSpaces()
            removeUnusedImports()
            toggleOffOn()
            eclipse().configFile(rootProject.file("codeformat/codeformat.xml"))
            importOrderFile(rootProject.file("codeformat/ae2.importorder"))
        }

        format("json") {
            target("src/main/resources/**/*.json")
            prettier().config(parser: "json")
        }
    }
}

allprojects {
    apply(plugin: "java")
    apply(plugin: "architectury-plugin")

    group = "me.ramidzkh"
    version = System.getenv("APPBOT_VERSION") ?: "0.0.0"

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}

def copyOutputs = tasks.register('copyOutputs', Copy) {
    from(project(":fabric").remapJar)
    from(project(":forge").remapJar)
    into(project.distsDirectory)
}

build {
    dependsOn(copyOutputs)
}
